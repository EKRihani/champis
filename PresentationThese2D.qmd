---
title: "Application de modèles d'apprentissage machine à la classification des macromycètes"
author: "Emir Kaïs RIHANI"
format:
  revealjs:
    theme: [theme.scss]
    slide-number: true
    embed-resources: true
---

```{r setup, include = FALSE, warning = FALSE}
load("EKR-Champis-Valeurs.RData")
load("EKR-Champis-Iris-Light.RData")
load("EKR-Champis-Intro-Light.RData")
#load("EKR-Champis-Naif-Light.RData")
load("EKR-Champis-AnalyseBi-Light.RData")
#load("EKR-Champis-AnalyseMultiFam-Light.RData")
load("EKR-Champis-AnalyseMultiEsp-Light.RData")
load("EKR-Generateur.RData")
load("EKR-DataSets.RData")
load("EKR-Champis-Outro.RData")

library(ggpubr)
library(tidyverse)
library(kableExtra)
```

# Introduction et objet de l'étude

## Objet de l'étude

- "Application de modèles d'apprentissage machine à la classification des macromycètes"
    - Application
    - Apprentissage machine
    - Classification
    - Macromycètes

# Notion de macromycète

## Macromycètes

- Macro-Mycète = "grand champignon"
- Le champignon (*mycélium*) est en réalité quasi-invisible et intimement lié à son substrat
- La partie visible du champignon est le *sporophore*

## Critère de forme

![](Photos/Formes/Craterellus_cornucopioides_2006_jg_1.jpg){fig-align="left" width="32%"} ![](Photos/Formes/Lycoperdon_perlatum_2010_mm_1.jpg){fig-align="center" width="32%"} ![](Photos/Formes/Morchella_esculenta_2007_ov_1.jpg){fig-align="right" width="32%"}

![](Photos/Formes/Pezziza%20spp_2007_go_1.jpg){fig-align="left" width="32%"} ![](Photos/Formes/Pleurotus_ostreatus_2007_ov_1.jpg){fig-align="center" width="32%"} ![](Photos/Formes/Tremella_mesenterica_2006_jg_1.jpg){fig-align="right" width="32%"}


![](Photos/Formes/Phallus_impudicus_2010_dg_1.jpg){.fragment .absolute bottom="40" left="360" height="540"}

::: footer
Source : MycoDB
:::

## Critère de couleur
::: {layout-nrow=2}
![](Photos/Couleurs/Amanita_muscaria_2005_ov_2.jpg){fig-align="left" width="32%"} ![](Photos/Couleurs/Entoloma_euchroum_2021_fm_2+.jpg){fig-align="center" width="32%"} ![](Photos/Couleurs/Hygrocybe_psittacinus_2008_jd_1.jpg){fig-align="right" width="32%"}

![](Photos/Couleurs/Phellodon_niger_2013_jg_1.jpg){fig-align="left" width="32%"} ![](Photos/Couleurs/Laccaria_amethystina_1998_dr_1.jpg){fig-align="center" width="32%"} ![](Photos/Couleurs/Hygrocybe_psittacinus_2008_mp_1.jpg){fig-align="right" width="32%"}
:::

::: footer
Source : MycoDB
:::

## Autres critères morphologiques
::: {layout-nrow=2}
![](Photos/Autres/Sarcodon_imbricatus_2008_gm_1.jpg){fig-align="left" width="32%"} ![](Photos/Autres/Xerocomellus_chrysenteron_2016_df_1.jpg){fig-align="center" width="32%"} ![](Photos/Autres/Marasmius_rotula_2009_gg_1.jpg){fig-align="right" width="32%"}

![](Photos/Autres/Amanita_muscaria_2009_jd_2.jpg){fig-align="left" width="32%"} ![](Photos/Autres/Amanita_phalloides_2011_jpa_1.jpg){fig-align="center" width="32%"} ![](Photos/Autres/Cortinarius_torvus_2007_jf_1.jpg){fig-align="right" width="32%"}
:::

::: footer
Source : MycoDB
:::

## Critère écologique

- Le champignon fait partie d'un écosystème
   - Hétérotrophie, interactions avec l'environnement
![](EcosystemeChampi.png)

## Caractéristiques du sporophore

![](AnatomieChampis.png)

# Notion de classification

## Classification

- Classification binaire : 2 classes
   - Comestible ou non ?
   - Définition *précise* du critère
- Classification multiclasse : > 2 classes
   - Familles
   - Espèces
   - Syndromes ?

## Notion de comestibilité

- La comestibilité se situe sur un continuum :
   - Excellents comestibles : *Tuber spp.*, *Amanita caesaria*...
   - Comestibles : *Agaricus arvensis*...
   - Comestibles cuits : *Morchella spp.*...
   - Comestibles médiocres : *Boletus felleus*...
   - Toxiques en grandes quantités : *Tricholoma equestre*...
   - Toxiques : *Amanita muscaria*...
   - Mortels : *Amanita phalloides*, *Amanita virosa*...

## Notion de comestibilité

| | C+ | C | CC | C- | T- | T | T+ |
|-|:--:|:-:|:--:|:--:|:--:|:-:|:--:|
| Prudent           | [✓]{style="color:green;"} | [✓]{style="color:green;"} | [✓]{style="color:green;"} |  [✗]{style="color:red;"}  |  [✗]{style="color:red;"}  | [✗]{style="color:red;"} | [✗]{style="color:red;"} |
| Gourmand          | [✓]{style="color:green;"} | [✓]{style="color:green;"} | [✓]{style="color:green;"} |  [✗]{style="color:red;"}  | [✓]{style="color:green;"} | [✗]{style="color:red;"} | [✗]{style="color:red;"} |
| Toxicologue | [✓]{style="color:green;"} | [✓]{style="color:green;"} |  [✗]{style="color:red;"}  | [✓]{style="color:green;"} |  [✗]{style="color:red;"}  | [✗]{style="color:red;"} | [✗]{style="color:red;"} |

- Critères du "gastronome prudent"
   - Toxiques et comestibles médiocres : à rejeter
   - Comestibles cuits : à conserver (morilles !)

# Notion d'apprentissage machine

## Généralités
- Apprentissage machine : 
   - La machine "apprend" de manière autonome
   - Amélioration des performances sans intervention
   - Amélioration par l'entraînement

![](Split-Jeux+.svg){fig-align="center"}

## Analyse Discriminante Linéaire

- Calcul d'un indice synthétique et du seuil de décision
- Pondération de chaque caractéristique dans l'indice
- Optimisation de la "résolution" (maximiser $\mathsf{D^{2}/S}$)
- Pour valeurs quantitatives ou qualitatives ordinales

![](LDA+.svg){fig-align="center"}

## Arbres de classification

- Construction d'un arbre décisionnel :
   - Nœud = test, évaluation d'un critère,
   - Feuille = nœud terminal = prédiction.
   - Test optimal : génère des sous-groupes homogènes

![](IntroChampisCART2Arbre+.svg){fig-align="center"}

## Forêts aléatoires

- Création d'une multitude d'arbres :
   - Masquage de critères : arbres "à œillères"
   - Décision finale = vote des arbres
- Plus robuste mais moins interprétable qu'un arbre simple

![](RandomForest+.svg){fig-align="center"}

## Optimisation des modèles
- Indicateur de performance
   - Indice de Youden pondéré ($\mathsf{J_{w} \geq `r Jw_min`}$)
      - Indice synthétique pondérant spécificité et sensibilité
      - `r Jw_ratio`x plus grave d'accepter un non-comestible
   - Kappa ($\mathsf{\kappa > 0.8}$)
      - Probabilité de prédiction exacte vs hasard
- Exploration de l'espace des hyperparamètres
   - Plans d'expériences

## Plans hypercubiques latins

- Plan d'expérience de type *Space-Filling Design*
   - 1 ligne + 1 colonne = 1 expérience

```{r, dev = "svg", dev.args=list(bg="transparent"), fig.height = 3.5, fig.cap = "Carré latin aléatoire (à gauche), optimisé (au milieu), quasi-orthogonal (à droite)"}
ggarrange(
   widths = c(1.05,1,1),
   ncol = 3,
   graphe_LHS + ylab("X2") +
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   ),
   graphe_optiLHS + 
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   ),
   graphe_NOHLD + 
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   )
)

```

# Génération du lot de données

## Construction du lot de données

- `r GEN_n_especes` espèces de champignons du Nord de la France
   - 25 critères caractéristiques
      - 22 critères qualitatifs
      - 3 critères quantitatifs
      - Espèce, famille, comestibilité
- `r GEN_n_champis` spécimens par espèce : `r BI_n_champis` champignons

- Tirage aléatoire des critères qualitatifs parmi les critères possibles pour chaque caractéristique et chaque espèce

## Génération des critères quantitatifs

- Critères dimensionnels :
   - Diamètre du chapeau $\mathsf{D_{C}}$,
   - Diamètre du pied (stipe) $\mathsf{D_{S}}$,
   - Hauteur du pied (stipe) $\mathsf{L_{S}}$.
 - Proportionnels, liés à la croissance du champignon $\mathsf{F_{C}}$.
$$\left \{
\begin{array}{l}
\mathsf{L_{S} = L_{S_{max}}.F_{C}} \\
\mathsf{D_{S} = D_{S_{max}}.F_{C}} \\
\mathsf{D_{C} = D_{C_{max}}.F_{C}} \\
\end{array}
\right.$$

## Génération des critères quantitatifs : loi bêta
```{r, dev = "svg", dev.args=list(bg="transparent")}
lois_beta + 
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   )
```

## Induction de variabilité
- Champignons générés "parfaitement proportionnés"
- Nécessité d'induire des variations (dispersion $\delta~$)

$$\left \{
\begin{array}{ll} 
\mathsf{L_{S} = L_{Smax}.F_{T}.\delta_{Ls}} & \mathsf{\delta_{Ls} \sim \mathcal{N}(\mu = 1 ; \sigma = 0.05)} \\
\mathsf{D_{S} = D_{Smax}.F_{T}.\delta_{Ds}} & \mathsf{\delta_{Ds} \sim \mathcal{N}(\mu = 1 ; \sigma = 0.05)} \\
\mathsf{D_{C} = D_{Cmax}.F_{T}.\delta_{Dc}} & \mathsf{\delta_{Dc} \sim \mathcal{N}(\mu = 1 ; \sigma = 0.05)} \\
\end{array}
\right.$$

## Induction de variabilité

```{r, dev = "png", dev.args=list(bg="transparent"), dpi = 100, fig.height = 5, fig.cap = paste0("Paramètres de taille (Ls et Dc), sans (à g.) et avec dispersion (à d.), pour ", n_reduit, " spécimens")}
plot(ggarrange(
   ncol = 2,
   nuage_sansdispersion + 
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   ),
   nuage_avecdispersion + 
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   )
   )
)
```

# Classification binaire

## Algorithme de classification

1. Découpage lots d'entraînement/optimisation/évaluation,
2. Apprentissage sur lot d'entraînement,
3. Exploration de l'espace des hyperparamètres,
4. Mesure et modélisation des performances,
5. Sélection des meilleurs hyperparamètres,
6. Mesure de performance des meilleurs hyperparamètres,
7. Sélection des meilleurs modèles, évaluation finale.

## LDA

* Algorithme rapide ($\mathsf{t_{moy} = `r BI_temps_lda2` ~-~ `r BI_temps_pda`}$ min)
* Performances prédictives insuffisantes ($\mathsf{J_{w} \approx `r round(mean(c(BI_fit_lda2_dim_resultats[,"Jw"], BI_fit_pda_lambda_resultats[,"Jw"])),3)`}$)

```{r, dev = "svg", dev.args=list(bg="transparent"), fig.height = 4.5, fig.cap = "Dix premiers facteurs de LDA prédisant la non-comestibilité des champignons"}
BI_lda2_graphe_facteurs + 
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   )
```

## LDA
::: {layout-ncol=2}
![A.phalloides, "Calice de la Mort"](Photos/RoseFanee/Amanita_phalloides_2005_rp_1.jpg){width=400}

![A.virosa, "Ange de la Mort"](Photos/RoseFanee/Amanita_virosa_2015_jpr_1.jpg){width=400}
:::

::: footer
Source : MycoDB
:::

## Arbres décisionnels

```{r, dev = "svg", dev.args=list(bg="transparent"), fig.height = 5.8, fig.cap = "Sensibilité (à g.) et spécificité (à d.) de rpartCost en fonction de la complexité et du coût"}
ggarrange(
   ncol = 2,
   BI_fit_rpartcost_sens_graphe + 
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   ),
   BI_fit_rpartcost_spec_graphe + 
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   )
)

```

## Arbres décisionnels

```{r, dev = "svg", dev.args=list(bg="transparent"), fig.height = 5.8, fig.width = 6.5, fig.cap = "Indice de Youden pondéré de rpartCost en fonction de ses hyperparamètres"}
BI_fit_rpartcost_jw_graphe + 
   theme(legend.position='right') + 
   #theme(legend.text = element_text(angle = 0, vjust = 1, hjust = 0)) +
   theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   )
```

## Arbres décisionnels
![Arbres simplifiés, optimisant la sensibilité (à g.) ou la spécificité (à d.)](BI_Arbre_Rpartcost_Duel.svg)

## Arbres décisionnels
![Structure arborescente complète](IntroChampisCART1Arbre.svg)

## Arbres décisionnels

* Arbres interprétables par l'humain,
* Performances prédictives et calculatoires correctes.
$$\left \{
\begin{array}{l}
\mathsf{J_{w_{Rpart}} = `r round(max(BI_fit_rpart_cp_resultats["Jw"]),4)`} \\
\mathsf{J_{w_{RpartCost}} = `r round(BI_fit_rpartcost_best_resultats["Jw"],4)`} \\
\mathsf{J_{w_{c5.0tree}} = `r round(BI_fit_c50tree_resultats["Jw"],4)`} \\
\end{array}
\right.$$

## Forêts aléatoires

```{r, dev = "svg", dev.args=list(bg="transparent"), fig.height = 5.8, fig.cap = "Sensibilité (à g.) et spécificité (à d.) du modèle Rborist"}
ggarrange(
   ncol = 2,
   BI_fit_Rborist_sens_graphe + 
      scale_fill_viridis_c(limits = c(0.999,1),option = "G", direction = 1) + 
      theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)),
      BI_fit_Rborist_spec_graphe + 
      theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   )
)
```

# Classification par espèces

## Arbres décisionnels 

```{r, dev = "svg", dev.args=list(bg="transparent"), fig.height = 5.8,  fig.cap = "Performances de rpart, en fonction du paramètre de complexité"}
MULESP_fit_rpart_cp_graphe +
      theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   )
```

- Performances médiocres ($\mathsf{\kappa \ll}$ 0.80), limites atteintes

## Forêts aléatoires

```{r, dev = "svg", dev.args=list(bg="transparent"), fig.height = 5.8, fig.cap = "Performances des modèles Ranger (à g.) et Rborist (à d.)"}
ggarrange(
   ncol = 2,
   MULESP_fit_ranger_Gini_kappa_graphe +
      theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   ),
   MULESP_fit_Rborist_kappa_graphe +
      theme(
      panel.background = element_rect(fill = "transparent", color="transparent"),
      plot.background = element_rect(fill = "transparent", color="transparent"),
      legend.background = element_rect(fill="transparent", color="transparent"),
      legend.box.background = element_rect(fill="transparent", color="transparent"),
      axis.title = element_text(size = 15),
      axis.text = element_text(size = 12),
      title = element_text(size = 15),
      legend.text = element_text(size = 12)
   )
)
```

## Forêts aléatoires

```{r}
kable(MULESP_RF_resultat, digits = 5) %>%
   kable_styling(font_size = 30)
```
- Excellentes performances (`r MULESP_erreur_Rborist` à `r MULESP_erreur_ranger` : `r MULESP_n_eval` erreurs)
- Erreurs "assez proches" de la valeur attendue

```{r}
kable(MULESP_CMerreurs_ranger, format = "html", align = "c", caption = "Matrice de confusion des erreurs de Ranger, (prédictions à g., références en h.)") %>%
   kable_styling(font_size = 15, bootstrap_options = c("striped", "hover", "condensed"))
```

# Conclusion

## Forces

- Génération de lots de données synthétiques,
- Plans d'expériences SFD et modélisation,
- Performances prédictives de l'apprentissage machine,
- Viabilité de nombreux modèles, selon la classification,
<!-- - Association R + Rmarkdown/Quarto + Latex. -->

## Limites et perspectives
- Limites :
   - Volet "terrain" (mycologie, utilisateurs) limité,
   - Rationalisation des critères du lot de données,
   - Pas de tests de robustesse des modèles.

- Perspectives :
   - Modèles déployables dans de nombreux domaines,
   - Création d'interface utilisateur (Shiny),
   - Génération de rapports automatisés.

# Merci !